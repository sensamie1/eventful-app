<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Image Upload</title>
  <style>
    body {
      font-family: Arial, sans-serif;
    }
    .container {
      max-width: 500px;
      margin: 0 auto;
      padding: 20px;
      border: 1px solid #ccc;
      border-radius: 5px;
      background-color: #f9f9f9;
    }
    h3 {
      text-align: center;
    }
    form {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    input[type="file"] {
      margin-bottom: 10px;
    }
    button[type="submit"], button[type="button"] {
      padding: 10px 20px;
      margin-top: 10px;
      background-color: #3f0e38;
      color: #fff;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }
    button[type="submit"]:hover, button[type="button"]:hover {
      background-color: #6a4565;
    }
    #imageUrl {
      margin-top: 10px;
    }
    #copyBtn {
      margin-top: 5px;
    }
    #uploadedImage {
      max-width: 100%;
      height: auto;
      margin-top: 10px;
    }
    .loader {
      border: 8px solid #f3f3f3;
      border-top: 8px solid #3f0e38;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 2s linear infinite;
      margin-bottom: 10px;
      display: none;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    /* Media query for smaller screens */
    @media screen and (max-width: 500px) {
      .container {
        padding: 10px;
      }
      input[type="file"], button[type="submit"], button[type="button"] {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <header>
    {{> creators-header-form }}
  </header>

  <div class="container">
    <h3><b>Upload Event Image</b></h3>
    <form id="imageUploadForm" method="post" enctype="multipart/form-data" action="/views/creators/events/upload-image">
      <input type="file" name="image" id="image" accept="image/*" required>
      <button type="submit" id="uploadBtn">Upload</button>
      <div class="loader" id="loader"></div>
    </form>
    <div id="imageUrl" style="display: none;">
      <p>Image URL:</p>
      <input type="text" id="imageUrlInput" readonly>
      <button type="button" id="copyBtn">Copy</button>
    </div>
    <div id="imageContainer" style="display: none;">
      <img src="#" id="uploadedImage" alt="Uploaded Image">
    </div>
    <p>Copy the generated URL after upload or if you already have a URL to your event image, click next to continue event creation.</p>
    <button type="button" onclick="location.href='/views/creators/events/create';">Next</button>
  </div>

  <footer>
    {{> creators-footer}}
  </footer>

  <script>
    // Function to display error message
    function displayErrorMessage(message) {
      const errorMessage = document.createElement('p');
      errorMessage.textContent = message;
      errorMessage.style.color = 'red';
      document.getElementById('imageUploadForm').appendChild(errorMessage);
    }

    const imageInput = document.getElementById('image');
    const imageUrlDiv = document.getElementById('imageUrl');
    const imageUrlInput = document.getElementById('imageUrlInput');
    const copyBtn = document.getElementById('copyBtn');
    const imageContainer = document.getElementById('imageContainer');
    const uploadedImage = document.getElementById('uploadedImage');
    const uploadBtn = document.getElementById('uploadBtn');
    const loader = document.getElementById('loader');

    // Copy image URL to clipboard
    copyBtn.addEventListener('click', () => {
      imageUrlInput.select();
      document.execCommand('copy');
      alert('Image URL copied to clipboard!');
    });

    // Display image URL and image after form submission
    const imageUploadForm = document.getElementById('imageUploadForm');
    imageUploadForm.addEventListener('submit', (event) => {
      event.preventDefault();
      const file = imageInput.files[0];
      if (file) {
        const formData = new FormData();
        formData.append('image', file);

        // Disable upload button and show loader
        uploadBtn.disabled = true;
        loader.style.display = 'block';

        fetch('/views/creators/events/upload-image', {
          method: 'POST',
          body: formData
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Failed to upload image.');
          }
          return response.json();
        })
        .then(data => {
          imageUrlInput.value = data.imageUrl;
          imageUrlDiv.style.display = 'block';
          uploadedImage.src = data.imageUrl;
          imageContainer.style.display = 'block';

          // Enable upload button and hide loader
          uploadBtn.disabled = false;
          loader.style.display = 'none';
        })
        .catch(error => {
          console.error('Error uploading image:', error);
          displayErrorMessage('Failed to upload image. Please try again.'); // Display error message
          // Enable upload button and hide loader (in case of error)
          uploadBtn.disabled = false;
          loader.style.display = 'none';
        });
      }
    });
    
  </script>

</body>
</html>
